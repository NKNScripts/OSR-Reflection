(*
Banking
=======

Banking contains banking api functions

*)

{$include_once ../wrappers/grounditem.simba}
{$include_once widgets.simba}



type
  TBankingApi = type(TApi);
var
  bankingAPI: TBankingApi;




function TBankingAPI.isOpen(option:Integer):boolean;
begin
  result := reflectLib.getFieldArrayBoolean(0,hook_Client_getValidWidgets, option);
end;


function TBankingAPI.getTabCount:integer;
var
  C,I : integer;
  tabs,Bank: Twidget;
  tmp:TWidgetArray;
begin
  if(not(Self.isOpen(BANK_INTERFACE))) then
    exit;
  C := 0;
  Bank := widgetAPI.getWidgetIndex(BANK_INTERFACE, BANK_TABS_PANE);
  tmp := Bank.getChildren();
  for i := 0 to High(tmp) do
    if(Length(tmp[i].getActions) > 2) then
      Inc(C);
  tmp.free;
  Bank.free;
  result := C;
end;

function TBankingAPI.close(option:Integer):boolean;
var
  Bank:TWidget;
  tmp:TWidgetArray;
  i:Integer;
begin
  if(option = BANK_INTERFACE) then
  begin
    if(not(Self.isOpen(BANK_INTERFACE))) then
      Exit(1);
    Bank := widgetAPI.getWidgetIndex(option,BANK_BUTTONS, BANK_CLOSE_BUTTON);
    if(Bank.isValid) then
    begin
      rsInput.box(Bank.getBounds,mouse_left);
      Result := true;
    end;
    Bank.free();
  end else if(option = DEPOSITBOX_INTERFACE) then
  begin
    Bank := widgetAPI.getWidgetIndex(option, DEPOSITBOX_CLOSE_BUTTON);
    if(Bank.isValid) then
    begin
      rsInput.box(Bank.getBounds,mouse_left);
      Result := true;
    end;
    Bank.free();
  end;

end;








